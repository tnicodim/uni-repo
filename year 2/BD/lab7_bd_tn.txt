#7.1. Să se calculeze numărul de studenți care nu au bursă și au media peste 7.50.

SELECT COUNT(*) as nrStud
FROM Student
WHERE ((bursa IS NULL OR bursa = 0) AND media > 7.5);

#7.2. Să se calculeze numărul de studenți care au ore cu profesorul 'Luca Caragiale'.

SELECT COUNT(*) AS nrStud FROM Student
WHERE sid = ANY(SELECT DISTINCT sid FROM Contract
                    WHERE cid = ANY (SELECT cid FROM Curs c, Profesor p
                        WHERE c.pid = p.pid AND p.nume = 'Luca Caragiale'))


#7.3. Să se calculeze numărul total de studenți care au ore la etajul 1 (încărcarea sălilor de la etajul 1), indiferent de facultate si de zi.

SELECT COUNT(*) AS nrStud FROM Student
WHERE sid = ANY(SELECT DISTINCT sid FROM Contract
                    WHERE cid = ANY (SELECT cid FROM Curs c, Sala s
                        WHERE c.sala = s.cods AND s.etaj = 1))

#7.4. Să se afișeze data nașterii celui mai tânăr și celui mai bătrân student din anul 2.

SELECT MAX(datan) as studMic, MIN(datan) as studMare
FROM Student
WHERE (an = 2);

#7.5. Să se calculeze suma și media burselor pe fiecare an de studiu la fiecare facultate. Se vor afișa numele facultății, anul de studiu, suma și media burselor.

SELECT fid, an, SUM(bursa), AVG(bursa) FROM Student
GROUP BY (fid, an)

#7.6. Să se afișeze bursa minimă (>0), medie și maximă a tuturor studenților care au ore in ziua de 'Luni', indiferent de curs.

SELECT MIN(BURSA), AVG(bursa), MAX(bursa) FROM Student
WHERE sid = ANY (SELECT DISTINCT sid FROM Contract
                    WHERE cid = ANY (SELECT cid FROM Curs
                                        WHERE zi = 'Luni'))

#7.7. Folosind subinterogări și agregări să se afișeze toți studenții cu bursa peste bursa medie din universitate.

SELECT nume, bursa FROM Student 
WHERE bursa > (SELECT AVG(bursa) FROM Student WHERE bursa > 0)

#7.8. Să se calculeze intervalul de normalitate a mediilor pentru fiecare facultate în parte. Se va afișa numele fiecărei facultăți precum și pragurile de jos și de sus a intervalului de normalitate pentru mediile studenților din acea facultate.

SELECT fid,
trunc(avg(media),2) - trunc(stddev(media),2) AS m1,
trunc(avg(media),2) + trunc(stddev(media),2) AS m2
FROM Student GROUP BY fid;

#7.9. Folosind subinterogări și agregări să se afișeze toți studenții care au medii în afara intervalului de normalitate a mediilor pe universitate.

SELECT sid, nume, media, an, fid FROM Student
WHERE media > (SELECT trunc(avg(media),2) + trunc(stddev(media),2) AS m2 FROM Student) OR media < (SELECT trunc(avg(media),2) - trunc(stddev(media),2) AS m1 FROM Student);
